<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-17T15:06:24 IST" name="Default suite" finished-at="2024-09-17T15:06:24 IST" duration-ms="94">
    <groups>
      <group name="negative">
        <method signature="CalculatorTest.testDivByZero()[pri:0, instance:CalculatorTest@21282ed8]" name="testDivByZero" class="CalculatorTest"/>
        <method signature="CalculatorTest.testIsPositiveNegative()[pri:0, instance:CalculatorTest@21282ed8]" name="testIsPositiveNegative" class="CalculatorTest"/>
        <method signature="CalculatorTest.testMultNegative()[pri:0, instance:CalculatorTest@21282ed8]" name="testMultNegative" class="CalculatorTest"/>
        <method signature="CalculatorTest.testSqrtNegative()[pri:0, instance:CalculatorTest@21282ed8]" name="testSqrtNegative" class="CalculatorTest"/>
        <method signature="CalculatorTest.testSubNegative()[pri:0, instance:CalculatorTest@21282ed8]" name="testSubNegative" class="CalculatorTest"/>
      </group> <!-- negative -->
      <group name="positive">
        <method signature="CalculatorTest.testDivPositive()[pri:0, instance:CalculatorTest@21282ed8]" name="testDivPositive" class="CalculatorTest"/>
        <method signature="CalculatorTest.testMultPositive()[pri:0, instance:CalculatorTest@21282ed8]" name="testMultPositive" class="CalculatorTest"/>
        <method signature="CalculatorTest.testSqrtPositive()[pri:0, instance:CalculatorTest@21282ed8]" name="testSqrtPositive" class="CalculatorTest"/>
        <method signature="CalculatorTest.testSubPositive()[pri:0, instance:CalculatorTest@21282ed8]" name="testSubPositive" class="CalculatorTest"/>
        <method signature="CalculatorTest.testSumParameterized(long,long,long)[pri:0, instance:CalculatorTest@21282ed8]" name="testSumParameterized" class="CalculatorTest"/>
        <method signature="CalculatorTest.testSumPositive()[pri:0, instance:CalculatorTest@21282ed8]" name="testSumPositive" class="CalculatorTest"/>
      </group> <!-- positive -->
    </groups>
    <test started-at="2024-09-17T15:06:24 IST" name="Default test" finished-at="2024-09-17T15:06:24 IST" duration-ms="94">
      <class name="CalculatorTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="setUp" finished-at="2024-09-17T15:06:24 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDivByZero()[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="testDivByZero" finished-at="2024-09-17T15:06:24 IST" duration-ms="9" status="PASS">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at CalculatorTest.testDivByZero(CalculatorTest.java:54)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivByZero -->
        <test-method signature="testDivPositive()[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="testDivPositive" finished-at="2024-09-17T15:06:24 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivPositive -->
        <test-method signature="testIsPositiveNegative()[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="testIsPositiveNegative" finished-at="2024-09-17T15:06:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsPositiveNegative -->
        <test-method signature="testMultNegative()[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="testMultNegative" finished-at="2024-09-17T15:06:24 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultNegative -->
        <test-method signature="testMultPositive()[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="testMultPositive" finished-at="2024-09-17T15:06:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultPositive -->
        <test-method signature="testSqrtNegative()[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="testSqrtNegative" finished-at="2024-09-17T15:06:24 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Square root of negative number result is incorrect. expected [NaN] but found [4.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Square root of negative number result is incorrect. expected [NaN] but found [4.0]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEquals(Assert.java:698)
at CalculatorTest.testSqrtNegative(CalculatorTest.java:72)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSqrtNegative -->
        <test-method signature="testSqrtPositive()[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="testSqrtPositive" finished-at="2024-09-17T15:06:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSqrtPositive -->
        <test-method signature="testSubNegative()[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="testSubNegative" finished-at="2024-09-17T15:06:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubNegative -->
        <test-method signature="testSubPositive()[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="testSubPositive" finished-at="2024-09-17T15:06:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubPositive -->
        <test-method signature="testSumParameterized(long,long,long)[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="testSumParameterized" data-provider="sumDataProvider" finished-at="2024-09-17T15:06:24 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumParameterized -->
        <test-method signature="testSumParameterized(long,long,long)[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="testSumParameterized" data-provider="sumDataProvider" finished-at="2024-09-17T15:06:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumParameterized -->
        <test-method signature="testSumParameterized(long,long,long)[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="testSumParameterized" data-provider="sumDataProvider" finished-at="2024-09-17T15:06:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumParameterized -->
        <test-method signature="testSumPositive()[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="testSumPositive" finished-at="2024-09-17T15:06:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumPositive -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:CalculatorTest@21282ed8]" started-at="2024-09-17T15:06:24 IST" name="tearDown" finished-at="2024-09-17T15:06:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CalculatorTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
